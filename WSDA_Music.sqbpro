/*

WSDA music Data Exploration

Grouping, aggregation, joins, Views, DML

This query displays all customers first, last names and email addresses

*/

SELECT
  FirstName AS [Customer First Name], 
  LastName AS 'Customer Last Name', 
  Email AS EMAIL
FROM 
  Customer
ORDER BY
  FirstName ASC,
  LastName DESC 
LIMIT 10


/*
Number of invoices that exist between $0.99 and $5.00
*/

SELECT 
  count(*)
FROM 
  Invoice
WHERE 
  total BETWEEN 0.99 and 5.00

/*
Number of invoices that we have which are exactly $1.98 or $3.96 
*/


SELECT
  count(*)
FROM 
  Invoice
WHERE 
  total in (1.98, 3.96)

  
/*
Cities that their names begins with 'B' ordered bu the invoice date
*/
 
SELECT 
  InvoiceDate,
  BillingAddress,
  BillingCity,
  total
FROM 
  Invoice
WHERE 
  BillingCity LIKE 'B%'
Order BY 
  InvoiceDate
  
 /*
JOINS: joining the customer and the invoice tables on the customerId 
*/

SELECT
  c.LastName,
  c.FirstName,
  i.InvoiceId,
  i.CustomerId,
  i.InvoiceDate,
  i.total
FROM 
  Customer as c
INNER JOIN
  Invoice as i
ON 
  c.CustomerId = i.CustomerId
ORDER BY 
  c.CustomerId 
  
  
/*
JOINS on more than two tables | Employees that are responsible for the 10 heighest individual sales
*/

SELECT 
  e.FirstName,
  e.LastName,
  e.EmployeeId,
  c.FirstName,
  c.LastName,
  c.SupportRepId,
  i.CustomerId,
  i.total
FROM 
  Invoice AS i
INNER JOIN 
  Customer AS c
ON 
  c.CustomerId = i.CustomerId
INNER JOIN 
  Employee as e
ON 
  e.EmployeeId = c.SupportRepId
ORDER BY
  i.total DESC
LIMIT 10


/*
Creating a mailing List of US Customers
*/

SELECT 
  FirstName,
  LastName,
  Address,
  FirstName || ' ' || LastName || ' ' || Address || ', ' || City || ' ' || State || ' ' || PostalCode AS [Mailing Address],
  LENGTH(PostalCode),
  SUBSTR(PostalCode, 1, 5) AS [5 digit Postal Code],
  upper(FirstName) AS [First Name ALL caps],
  lower(lastname) AS [Last Name ALL lower]
FROM
  Customer
WHERE 
  Country = 'USA'


/*
Calculate the customers age
*/

SELECT 
  FirstName,
  LastName,
  BirthDate,
  strftime('%Y-%m-%d', BirthDate) AS [BirthDate No Timecode],
  strftime('%Y-%m-%d','now') - strftime('%Y-%m-%d', BirthDate) AS  Age
FROM
  Employee  
  
  
/*
Aggregate functions 
*/

SELECT
  SUM(Total) AS [Total Sales],
  round(AVG(Total),2) AS [Average Sales],
  MAX(Total) AS [Max Sale],
  MIN(Total) AS [Min Sale],
  COUNT(*) AS [Sales Count]
  
From 
  Invoice
 
/*
Grouping in SQL | The average invoice totals greater than $5.00 for cities starting with B
*/

SELECT 
  BillingCity,
  round(AVG(Total),2) AS [Average Total Sales by city]
FROM 
  Invoice
WHERE 
  BillingCity like 'B%'
GROUP BY 
  BillingCity
HAVING 
  AVG(Total) > 5.00
ORDER BY
  BillingCity

  
/*
Subqueries | Data about all invoices that are less than this average 
*/

SELECT 
  InvoiceDate,
  BillingAddress,
  BillingCity,
  Total 
FROM 
  Invoice
WHERE 
  total < (select avg(total) from Invoice)
ORDER BY 
  total DESC 
  
/*
Grouping by more than one field at a time | The average invoice totals by billing country and city
*/

SELECT 
  BillingCountry,
  BillingCity,
  round(avg(total),2)
FROM 
  Invoice
GROUP BY  
  BillingCountry, BillingCity
Order By 
  BillingCountry
  
/*
Subqueries in the SELECT | performance of each individual city  against the global average sales 
*/

SELECT 
  BillingCity,
  round(AVG(total),2)AS [City average],
  (select round(avg(total),2) from invoice) AS [Global average]
FROM 
  Invoice
Group BY
  BillingCity
ORDER BY
  BillingCity
  
  
/*
Subqueries without Aggregate functions
*/

SELECT
  InvoiceDate,
  BillingAddress,
  BillingCity
FROM 
  Invoice
WHERE 
InvoiceDate >
(SELECT
   InvoiceDate
 FROM 
   Invoice
 WHERE 
   InvoiceId = 251)
 
 /*
Returning multiple values from a subquery
*/

SELECT 
  InvoiceDate,
  BillingAddress, 
  BillingCity
FROM 
  Invoice
WHERE
  InvoiceDate in
  (SELECT 
    InvoiceDate
   FROM 
     Invoice
   WHERE
     InvoiceId in (251, 252, 254))
	 
/*
Subqueries and DISTINCT | Tracks that are not selling 
*/

SELECT
  TrackId,
  Composer,
  Name
FROM 
  Track
WHERE 
  TrackId
  NOT IN

(SELECT 
  DISTINCT  
  TrackId
FROM 
  InvoiceLine
ORDER BY
  TrackId)

-- Views

CREATE VIEW V_AvgTotal AS
SELECT 
  round(avg(total),2) AS [Average Total]
FROM 
  Invoice
  
-- DROP VIEW V_AvgTotal / 

--Views and Joins

CREATE VIEW V_Tracks_InvoiceLine AS
SELECT 
  il.InvoiceId,
  il.UnitPrice,
  il.Quantity,
  t.Name,
  t.Composer,
  t.Milliseconds
FROM 
  InvoiceLine il
INNER JOIN 
  Track t
ON 
  il.TrackId = t.TrackId

-- DML | insert Data 

INSERT INTO
  Artist(Name)
VALUES ('THE weekend')

--DML | Updating Data 

UPDATE 
  Artist
SET Name = 'Charlie Puth'
WHERE ArtistId = 276


--DML | Deleting Data 

DELETE FROM 
  Artist
WHERE 
  ArtistId = 276

  
